replicaCount: 1

image:
  repository: gabriellfe31222/itau
  pullPolicy: IfNotPresent
  tag: "0.0.3"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: "itau-service-account"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 8080
  targetPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  annotations: {
    "kubernetes.io/ingress.class": "nginx",
    "nginx.ingress.kubernetes.io/rewrite-target": "/$2"
  }
  hosts:
    - host: "api.dev-ops-gabriellfe.com"
      paths:
        - path: /api/jwt-service(/|$)(.*)
          pathType: ImplementationSpecific
  tls: []

resources:
  limits:
    cpu: 300m
    memory: 1028Mi
  requests:
    cpu: 100m
    memory: 528Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30   
  failureThreshold: 5
  successThreshold: 1
  httpGet:
    path: /actuator/health
    port: http
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30   
  failureThreshold: 5
  httpGet:
    path: /actuator/health
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
